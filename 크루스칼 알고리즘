#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include <vector>
#include <algorithm>

using namespace std;
int parent[1000001];
vector<pair<int, pair<int, int>>> edge;
vector<pair<int, pair<int, int>>> t;

int find(int x)
{
	if (parent[x] == x)
	{
		return parent[x];
	}
	else
	{
		return parent[x] = find(parent[x]);
	}
}

void unionab(int a, int b)
{
	a = find(a);
	b = find(b);
	if (a < b)
	{
		parent[b] = a;

	}
	else
	{
		parent[a] = b;
	}

}

int v, e, a, b, c;
int main()
{
	int weight = 0;
	scanf("%d %d", &v, &e);
	for (int i = 1; i <= v; i++)
	{
		parent[i] = i;
	}
	for (int i = 0; i < e; i++)
	{
		scanf("%d %d %d", &c, &a, &b);
		edge.push_back(make_pair(c, make_pair(a, b)));
	}
	sort(edge.begin(), edge.end());
	for (int i = 0; i < edge.size(); i++)
	{
		int cost = edge[i].first;
		int a = edge[i].second.first;
		int b = edge[i].second.second;
		if (parent[a] != parent[b])
		{
			unionab(a, b);
			weight += cost;
		}
	}
	printf("%d", weight);
}
